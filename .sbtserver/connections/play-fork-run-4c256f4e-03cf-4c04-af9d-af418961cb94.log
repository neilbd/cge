New log file opened at Sat Jun 25 15:36:35 EDT 2016 by 1247@neilbd-pc
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,sbt client logs are in: /Users/neilbd/Documents/CGE/cge/.sbtserver/connections/play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94.log))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,sbt server socket logs are in: /Users/neilbd/Documents/CGE/cge/.sbtserver/connections/master.log))
Reading next message from client.
Got request: ListenToEvents()
Reading next message from client.
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,> --initialize))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: (3,ReceivedResponse())
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,sbt general server logs are in: /Users/neilbd/Documents/CGE/cge/.sbtserver/master.log))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,> initialize))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,> onFailure load-failed))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,> boot))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,> reload))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Scanning directory /Users/neilbd/Documents/CGE/cge/project/project))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Found non-root projects ))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Done in /Users/neilbd/Documents/CGE/cge/project/project, returning: ()))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))))))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Done in /Users/neilbd/Documents/CGE/cge/project/project, returning: (cge-build-build)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(info,Loading project definition from /Users/neilbd/Documents/CGE/cge/project/project))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,Running task... Cancel: sbt.TaskCancellationStrategy$Null$@e556c94, check cycles: false))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,
Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,All initially invalidated sources: Set()
))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,Copy resource mappings: 
	))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Scanning directory /Users/neilbd/Documents/CGE/cge/project))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Found non-root projects ))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Done in /Users/neilbd/Documents/CGE/cge/project, returning: ()))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))))))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,sorting: ns: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorting:: found: List(sbt.plugins.CorePlugin) not found List(sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin) not found List(sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin) not found List(sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorting:: found: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin) not found List()))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,  :: sorted deduced result: List(sbt.plugins.CorePlugin, sbt.plugins.IvyPlugin, sbt.plugins.JvmPlugin, sbt.plugins.JUnitXmlReportPlugin)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Done in /Users/neilbd/Documents/CGE/cge/project, returning: (cge-build)))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(info,Loading project definition from /Users/neilbd/Documents/CGE/cge/project))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,Running task... Cancel: sbt.TaskCancellationStrategy$Null$@e556c94, check cycles: false))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,
Initial source changes: 
	removed:Set()
	added: Set()
	modified: Set()
Removed products: Set()
External API changes: API Changes: Set()
Modified binary dependencies: Set()
Initial directly invalidated sources: Set()

Sources indirectly invalidated by:
	product: Set()
	binary dep: Set()
	external source: Set()))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,All initially invalidated sources: Set()
))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,Copy resource mappings: 
	))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Scanning directory /Users/neilbd/Documents/CGE/cge))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,[Loading] Found root project myProject w/ remaining ))
Sending msg to client play-fork-run-4c256f4e-03cf-4c04-af9d-af418961cb94: DetachedLogEvent(LogMessage(debug,deducing auto plugins based on known facts Set(Atom(play.sbt.PlayJava), Atom(play.ebean.sbt.PlayEbean), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(play.sbt.forkrun.PlayForkRun),Set(Atom(sbt.plugins.BackgroundRunPlugin))), Clause(Atom(play.sbt.forkrun.PlayForkRun),Set(Atom(play.sbt.Play))), Clause(Atom(play.sbt.forkrun.PlayForkRun),Set(Atom(sbt.plugins.SerializersPlugin))), Clause(Atom(play.sbt.Play),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaServerAppPackaging))), Clause(Atom(play.sbt.Play),Set(Atom(play.sbt.routes.RoutesCompiler))), Clause(Atom(play.sbt.Play),Set(Atom(play.twirl.sbt.SbtTwirl))), Clause(Atom(play.sbt.Play),Set(Atom(com.typesafe.sbt.jse.SbtJsTask))), Clause(Atom(play.sbt.PlayAkkaHttpServer),Set(Atom(play.sbt.Play))), Clause(Atom(play.sbt.PlayJava),Set(Atom(play.sbt.Play))), Clause(Atom(play.sbt.PlayLayoutPlugin),Set(Atom(play.sbt.Play))), Clause(Atom(play.sbt.PlayNettyServer),Set(Atom(play.sbt.Play))), Clause(Atom(play.sbt.PlayScala),Set(Atom(play.sbt.Play))), Clause(Atom(play.sbt.routes.RoutesCompiler),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(play.twirl.sbt.SbtTwirl),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.packager.archetypes.AkkaAppPackaging),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging))), Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.windows.WindowsPlugin))), Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.docker.DockerPlugin))), Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.debian.DebianPlugin))), Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.rpm.RpmPlugin))), Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaServerAppPackaging),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging))), Clause(Atom(com.typesafe.sbt.packager.archetypes.jar.ClasspathJarPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging))), Clause(Atom(com.typesafe.sbt.packager.archetypes.jar.LauncherJarPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging))), Clause(Atom(com.typesafe.sbt.packager.debian.DebianDeployPlugin),Set(Atom(com.typesafe.sbt.packager.debian.DebianPlugin))), Clause(Atom(com.typesafe.sbt.packager.debian.DebianPlugin),Set(Atom(com.typesafe.sbt.packager.linux.LinuxPlugin))), Clause(Atom(com.typesafe.sbt.packager.debian.JDebPackaging),Set(Atom(com.typesafe.sbt.packager.debian.DebianPlugin))), Clause(Atom(com.typesafe.sbt.packager.docker.DockerPlugin),Set(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin))), Clause(Atom(com.typesafe.sbt.packager.jdkpackager.JDKPackagerDeployPlugin),Set(Atom(com.typesafe.sbt.packager.jdkpackager.JDKPackagerPlugin))), Clause(Atom(com.typesafe.sbt.packager.jdkpackager.JDKPackagerPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging))), Clause(Atom(com.typesafe.sbt.packager.jdkpackager.JDKPackagerPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.jar.ClasspathJarPlugin))), Clause(Atom(com.typesafe.sbt.packager.linux.LinuxPlugin),Set(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin))), Clause(Atom(com.typesafe.sbt.packager.rpm.RpmDeployPlugin),Set(Atom(com.typesafe.sbt.packager.rpm.RpmPlugin))), Clause(Atom(com.typesafe.sbt.packager.rpm.RpmPlugin),Set(Atom(com.typesafe.sbt.packager.linux.LinuxPlugin))), Clause(Atom(com.typesafe.sbt.packager.universal.UniversalDeployPlugin),Set(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin))), Clause(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin),Set(Atom(com.typesafe.sbt.SbtNativePackager))), Clause(Atom(com.typesafe.sbt.packager.windows.WindowsDeployPlugin),Set(Atom(com.typesafe.sbt.packager.windows.WindowsPlugin))), Clause(Atom(com.typesafe.sbt.packager.windows.WindowsPlugin),Set(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.jse.SbtJsEngine),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.jse.SbtJsTask),Set(Atom(com.typesafe.sbt.jse.SbtJsEngine))), Clause(Atom(sbt.plugins.BackgroundRunPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.coffeescript.SbtCoffeeScript),Set(Atom(com.typesafe.sbt.jse.SbtJsTask))), Clause(Atom(com.typesafe.sbt.less.SbtLess),Set(Atom(com.typesafe.sbt.jse.SbtJsTask))), Clause(Atom(com.typesafe.sbt.jshint.SbtJSHint),Set(Atom(com.typesafe.sbt.jse.SbtJsTask))), Clause(Atom(com.typesafe.sbt.rjs.SbtRjs),Set(Atom(com.typesafe.sbt.jse.SbtJsTask))), Clause(Atom(com.typesafe.sbt.digest.SbtDigest),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.mocha.SbtMocha),Set(Atom(com.typesafe.sbt.jse.SbtJsTask))), Clause(Atom(play.ebean.sbt.PlayEbean),Set(Atom(com.typesafe.play.sbt.enhancer.PlayEnhancer))), Clause(Atom(com.typesafe.play.sbt.enhancer.PlayEnhancer),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(And(Set(Atom(sbt.plugins.BackgroundRunPlugin), Atom(play.sbt.Play), Atom(sbt.plugins.SerializersPlugin))),Set(Atom(play.sbt.forkrun.PlayForkRun))), Clause(Atom(play.sbt.Play),Set(Atom(play.sbt.PlayLayoutPlugin))), Clause(Atom(play.sbt.Play),Set(Atom(play.sbt.PlayNettyServer))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(com.typesafe.sbt.jse.SbtJsEngine))), Clause(Atom(com.typesafe.sbt.jse.SbtJsEngine),Set(Atom(com.typesafe.sbt.jse.SbtJsTask))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.BackgroundRunPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.InteractionServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SendEventServicePlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.SerializersPlugin)))